BEGIN TRANSACTION;


-- WEEK STATISTICS
-- FOR MORE DETAILS THERE'S DAY STATISTICS FOR THE WEEK'S DAYS
CREATE TABLE IF NOT EXISTS WEEK_STATISTICS (

    ID INTEGER PRIMARY KEY AUTOINCREMENT,

    -- TIME CONSUMMED IN READING OR WATCHING CONTENT (WEEK)
    CONS FLOAT,

    -- TIME CONSUMMED IN WRITING CONTENT (WEEK)
    PROD FLOAT

);

INSERT INTO WEEK_STATISTICS ( ID, CONS, PROD) VALUES ( 1.5, 1.5);

-- A DAY IN A WEEK STATISTICS 
CREATE TABLE IF NOT EXISTS DAY_STATISTICS (

    WEEK INTEGER

    -- from monday to sunday
    DAY TEXT,

    CONS FLOAT,

    PROD FLOAT,

    FOREIGN KEY (WEEK) REFERENCES WEEK_STATISTICS(ID)

);

INSERT INTO DAY_STATISTICS ( WEEK, DAY,CONS, PROD) VALUES ( 1, "Monday", 1.5, 1.5);

-- general statistics overview 
CREATE TABLE IF NOT EXISTS STATISTICS (

    -- THE WEEK WE'RE CURRENTLY IN 
    WEEK_ID INTEGER,

    -- tasks not started
    TODO INTEGER,

    -- in progress tasks
    INPROGRESS INTEGER,

    -- done tasks
    DONE INTEGER,

    -- tasks in hold
    HOLD INTEGER

    FOREIGN KEY (WEEK_ID) REFERENCES WEEK_STATISTICS(ID)

);

INSERT INTO STATISTICS ( WEEK_ID, TODO, INPROGRESS, DONE, HOLD) VALUES( 1, 5, 3, 4, 6);


CREATE TABLE IF NOT EXISTS TASKS (
    -- an id 
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    -- in which list they are
    LIST TEXT,
    -- the name of the task the user gave
    TITLE TEXT,
    -- when created
    CREATED TEXT,
    -- due to
    FOR TEXT,
    -- any description added by the user
    BODY TEXT
);

-- INSERT INTO STATISTICS ( DAY, CONS, PROD) VALUES( DATETIME('2024-12-25 19:00:00'), 1.5, 1.9);

INSERT INTO TASKS ( LIST, TITLE, CREATED, FOR, BODY) VALUES( "todo",'OUSSAMA', DATETIME('2024-12-25 19:00:00'), DATETIME('2024-12-25 19:00:00'), 'OUSSAMA');



COMMIT;